name: Deploy to AWS EC2
permissions:
  contents: read

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20.19.0 on runner
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install deps (runner)
        run: npm ci --omit=dev --no-audit --no-fund --prefer-offline --ignore-scripts

      - name: Build (runner)
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NODE_ENV: production
        run: |
          echo "[INFO] runner build start $(date -Is)"
          NODE_OPTIONS='--max-old-space-size=4096' npm run build --silent
          echo "[INFO] runner build end $(date -Is)"

      - name: Create build archive
        run: tar -czf build.tar.gz .next node_modules public package.json

      - name: Upload build to EC2 (rsync)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo "[INFO] Uploading build.tar.gz via rsync"
            rsync -avz --progress build.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          timeout: 45m
          command_timeout: 45m
          debug: true
          script: |
            set -euo pipefail
            echo "[INFO] Starting deploy on $(hostname)"
            TARGET_DIR="/home/${{ secrets.EC2_USER }}/mokin-recruit"
            BUILD_TARBALL="/home/${{ secrets.EC2_USER }}/build.tar.gz"

            mkdir -p "$TARGET_DIR"
            tar -xzf "$BUILD_TARBALL" -C "$TARGET_DIR"
            rm -f "$BUILD_TARBALL"

            # .env.production を生成
            cat > "$TARGET_DIR/.env.production" << 'EOF'
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
            NODE_ENV=production
            EOF

            cd "$TARGET_DIR"

            # PM2 でリスタート
            if ! command -v pm2 >/dev/null 2>&1; then
              npm i -g pm2
            fi
            pm2 restart mokin-recruit || pm2 start npm --name mokin-recruit -- start
